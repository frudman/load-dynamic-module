define(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n.d(t,"loadedModules",function(){return a}),n.d(t,"default",function(){return l});const r=new Function("return Object.getPrototypeOf(async function(){}).constructor")(),o=e=>e.replace(/\brequire\s*[(]/g,"await require(");const s=e=>/module[.]exports/.test(e);function u(e,t){return/^(https?[:])?[\/][\/]/i.test(e)?e:/^[a-z_$]/i.test(e)?`https://unpkg.com/${e}`:t?new URL(e,t).href:e}var i=u;l.setUrlResolver=(e=>(i=e||u,l));const a={};function c(e,t){a[e]={isKnown:!0,isLoaded:!0,type:"isBuiltin",module:t}}async function d(e){return(await l(e)).module}async function l(e,t=window.location.href){const n=i(e,t),u=e===n?`mod=${e}`:`mod=${e}; url=${n}`;return new Promise(async i=>{const c=a[n]||(a[n]={isKnown:!1,module:void 0});function d(e,t){1===arguments.length?log("MODULE LOADING ERROR",u,"\n...",(c.err=e).name,e.message):(c.module=e,c.type=t),c.isLoaded=!!c.module,c.listeners.forEach(e=>e(c)),i(c)}if(c.isKnown)if(c.isLoaded||c.err)i(c);else{if(t){const n=c.dependents.find(e=>e===t);if(n)return d(new Error("CYCLYCAL DEPENDENCY: "+e+"<--\x3e"+n));c.dependents.push(t)}c.listeners.push(e=>i(e))}else{Object.assign(c,{isKnown:!0,dependents:[t],listeners:[],moduleRequestUrl:e,actualModuleUrl:n});try{const t=await function e(t,{method:n="GET",retry:r=3,retryDelayInMS:o=500}={}){return new Promise((s,u)=>{const i=new XMLHttpRequest;i.onreadystatechange=(()=>{4===i.readyState&&(i.status>=200&&i.status<300?s({data:i.responseText,responseURL:i.responseURL}):i.status>=500&&i.status<600&&r-- >0?(setTimeout(()=>{e(t,{method:n,retry:r,retryDelayInMS:o}).then(s).catch(u)},o),o*=2):u({status:i.status,statusText:i.statusText}))}),i.open(n||"GET",t,!0),i.send()})}(n),u=t.responseURL,i=t.data,a=new r("define","module","exports","require",i);p.amd={};var f=!1;function p(...e){f=!0;const t=e.pop();if("function"!=typeof t)throw new Error(`expecting 'define' to be a function - was ${typeof t}`);const n=(e.pop()||[]).map(e=>l(e,u));Promise.all(n).then(e=>{try{d(t(...e.map(e=>e.module)),"AMD")}catch(e){d(e)}})}try{let t,n,r=()=>{throw new Error("require is invalid in AMD modules: "+e)};await a(p,t,n,r)}catch(e){f&&d(e)}if(!f)if(s(i)){const e=o(i),t=new r("module","exports","require",e),n={exports:{}},s=async e=>(await l(e,u)).module;try{await t(n,n.exports,s),d(n.exports,"CommonJS")}catch(e){d(e)}}else d(new Error("module seems to be neither AMD/UMD not CommonJS"))}catch(e){d(e)}}})}c("load-dynamic-module",l),c("require-async",d),c("async-require",d)}])});