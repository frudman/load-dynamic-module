define(["axios"],function(e){return function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=1)}([function(n,t){n.exports=e},function(e,n,t){"use strict";t.r(n),t.d(n,"loadedModules",function(){return c}),t.d(n,"default",function(){return a});var o=t(0);const r=new Function("return Object.getPrototypeOf(async function(){}).constructor")(),i=e=>e.replace(/\brequire\s*[(]/g,"await require("),u=e=>/module[.]exports/.test(e);function s(e){return/^(https?[:])?[\/][\/]/i.test(e)?e:/^[a-z_$]/i.test(e)?`https://unpkg.com/${e}`:e}const l={logInfo:console.log.bind(console),logError:console.error.bind(console),actualUrl:s};a.settings=(e=>(Object.assign(l,e),a));const c={};async function a(e,n){return new Promise(async t=>{const d=c[e]||(c[e]={isKnown:!1,module:void 0}),f=l.logInfo,p=l.logError;function m(n,o,r){r?p(e.toUpperCase()+" module: FAILED TO LOAD",o,r):f(e.toUpperCase()+" module: LOADED",o,n),d.module=n,d["is"+o]=!0,d.listeners.forEach(e=>e(n)),t(d)}if(d.isKnown)if(void 0!==d.module)t(d);else{if(n){const t=d.dependents.find(e=>e===n);if(t)return m(null,"CYCLICAL-DEPENDENCY",new Error("CYCLYCAL DEPENDENCY for "+e+" with "+t));d.dependents.push(n)}listeners.push(e=>t(e))}else{const t=l.actualUrl(e,s);Object.assign(d,{isKnown:!0,dependents:n?[n]:[],listeners:[],moduleRequestUrl:e,actualModuleUrl:t});try{const n=await o.get(t);f(`DOWNLOADED MODULE=${e}${e===t?"":` [from ${t}]`}`,n);const s=n.data,l=new Function("define","module","exports","require",s);y.amd={};var O=!1;function y(...n){O=!0,f("..."+e+" is an AMD module");const t=n.pop();if("function"!=typeof t)throw new Error(`expecting 'define' to be a function - was ${typeof t}`);const o=(n.pop()||[]).map(n=>a(n,e));Promise.all(o).then(e=>{try{m(t(...e.map(e=>e.module)),"AMD")}catch(e){m(null,"AMD-INIT-ERROR",e)}})}try{let n,t;l(y,n,t,()=>{throw new Error("require is invalid in AMD modules: "+e)}),f("..."+e+" successfully completed initialization",O?"is an AMD module":"is NOT and amd module")}catch(n){p("..."+e+" failed to initialize as amd module",O,n)}if(!O)if(u(s)){const t=i(s),o=new r("module","exports","require",t),u={exports:{}};try{await o(u,u.exports,async function(t){const o=new URL(t,n.request.responseURL).href;return f("CJS REQUIRE: importing "+o),(await a(o,e)).module}),m(u.exports,"CommonJS")}catch(e){m(null,"CommonJS-INIT-ERROR",e)}}else m(null,"MODULE-TYPE-UNKNOWN",new Error("module seems to be neither AMD/UMD not CommonJS"))}catch(e){m(null,"AXIOS-DOWNLOAD-ERR",e)}}})}}])});