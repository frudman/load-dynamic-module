!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(window,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n.d(t,"addKnownModule",function(){return l}),n.d(t,"default",function(){return d});const r=new Function("return Object.getPrototypeOf(async function(){}).constructor")(),o=e=>e.replace(/\brequire\s*[(]/g,"await require("),s=e=>/module[.]exports/.test(e);function i(e,t){return/^(https?[:])?[\/][\/]/i.test(e)?e:/^[a-z_$]/i.test(e)?`https://unpkg.com/${e}`:t?new URL(e,t).href:e}const a={};class u{static getModule(e){return a[e]||(a[e]=new u({name:e}))}static addModule(e,t){a[e]=new u({name:e,module:t})}constructor({name:e,module:t}={}){this.name=e,this.module=t}get isLoaded(){return this.module||this.err}get isUnresolved(){return!this.isLoaded&&!!this.resolveMe}resolved(e){this.module=e,this.publicizeResolution()}resolvedWithError(e){this.err=e,"SyntaxError"===e.name&&/await.+async.+function/i.test(e.message||"")?console.warn(`${this.name} may be CJS module with nested requires\n\t(nested requires must be inside async functions)`):console.error(`${this.name} module was not loaded`,e),this.publicizeResolution()}publicizeResolution(){this.resolveMe(),delete this.resolveMe,(this.waitingOnMe||[]).forEach(e=>e.resolveDependent()),delete this.waitingOnMe}dependsOnMe(e,t){const n=this.waitingOnMe||(this.waitingOnMe=[]);n.find(t=>t.url===e)?this.resolvedWithError(new Error("CYCLYCAL DEPENDENCY: "+e+"<--\x3e"+this.name)):n.push({url:e,resolveDependent:t})}}function l(e,t,n=i){const r=n(e);u.addModule(r,new u({name:r,module:t}))}async function d(e,{baseUrl:t=window.location.href,globals:n=(()=>{}),urlResolver:a=i}={}){return new Promise(async i=>{const l=a(e,t),c=u.getModule(l);if(c.isLoaded)i(c);else if(c.isUnresolved)log(t+" WAITING FOR dependent "+l),c.dependsOnMe(t,()=>i(c));else{c.resolveMe=(()=>i(c));try{const e=(await function e(t,{method:n="GET",retry:r=3,retryDelayInMS:o=500}={}){return new Promise((s,i)=>{const a=new XMLHttpRequest;a.onreadystatechange=(()=>{if(4===a.readyState)if(a.status>=200&&a.status<300)s({data:a.responseText,responseURL:a.responseURL});else if(a.status>=500&&r-- >0)setTimeout(()=>{e(t,{method:n,retry:r,retryDelayInMS:o}).then(s).catch(i)},o),o*=2;else{const e=new Error(`failed to ${n} ${t} [${r<=0?"too many retries;":""}http-code=${a.status}${a.statusText?`(${a.statusText})`:""}]`);e.name=`HTTP-${n}-Error`,e.statusCode=a.status,e.statusText=a.statusText,i(e)}}),a.open(n||"GET",t,!0),a.send()})}(l)).data,t={baseUrl:l,globals:n,urlResolver:a},i={define:p,module:void 0,exports:void 0,require(e){throw new Error(`cannot 'require' in AMD module ${l}:\n\try 'await requireAsync("${e}"' instead`)},requireAsync:async e=>(await d(e,t)).module},u={},m={define:()=>{throw new Error("unexpected use of DEFINE in commonJS module")},module:{exports:u},exports:u,require:async e=>(await d(e,t)).module};n(i,m);const y=new r(...Object.keys(i),e);p.amd={};var f=!1;function p(...e){f=!0;const n=e.pop();if("function"!=typeof n)throw new Error(`expecting 'define' to be a function (was ${typeof n})`);const r=n.length,o=[];for(;o.length<r;){const t=e.pop();if("string"==typeof t)o.unshift(t);else{if(!Array.isArray(t))throw new Error("invalid dependency in AMD module definition - can only be a string or an array of strings");for(;o.length<r&&t.length>0;){const e=t.pop();if("string"!=typeof e)throw new Error(`invalid dependency in AMD module definition - can only be a string (got type=${typeof e})`);o.unshift(e)}}}const s=o.map(e=>d(e,t));Promise.all(s).then(e=>{try{c.resolved(n(...e.map(e=>e.module)))}catch(e){c.resolvedWithError(e)}})}try{await y(...Object.values(i))}catch(e){f&&c.resolvedWithError(e)}if(!f)if(s(e)){const t=o(e),n=new r(...Object.keys(m),t);await n(...Object.values(m)),c.resolved((m.module||{}).exports||u)}else c.resolvedWithError(new Error("module seems to be neither AMD/UMD nor CommonJS"))}catch(e){c.resolvedWithError(e)}}})}l("load-dynamic-module",d)}])});