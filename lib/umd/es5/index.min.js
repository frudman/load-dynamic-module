!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var o in n)("object"==typeof exports?exports:e)[o]=n[o]}}(window,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n.d(t,"loadedModules",function(){return a}),n.d(t,"default",function(){return c});const o=new Function("return Object.getPrototypeOf(async function(){}).constructor")(),r=e=>e.replace(/\brequire\s*[(]/g,"await require("),s=e=>/module[.]exports/.test(e);function u(e){return/^(https?[:])?[\/][\/]/i.test(e)?e:/^[a-z_$]/i.test(e)?`https://unpkg.com/${e}`:e}const i={actualUrl:u,download:async e=>(function e(t,{method:n="GET",retry:o=3}={}){return new Promise((r,s)=>{const u=new XMLHttpRequest;u.onreadystatechange=(()=>{4===u.readyState&&(u.status>=200&&u.status<300?r({data:u.responseText,responseURL:u.responseURL}):u.status>=500&&u.status<600&&o-- >0?setTimeout(()=>{e(t,{method:n,retry:o}).then(r).catch(s)},2e3):s({status:u.status,statusText:u.statusText}))}),u.open(n||"GET",t,!0),u.send()})})(e)};c.settings=(e=>(Object.assign(i,e),c));const a={};async function c(e,t){return new Promise(async n=>{const d=a[e]||(a[e]={isKnown:!1,module:void 0});function f(e,t){1===arguments.length?d.err=e:(d.module=e,d.type=t),d.isLoaded=!d.err,d.listeners.forEach(e=>e(d)),n(d)}if(d.isKnown)if(d.isLoaded)n(d);else{if(t){const n=d.dependents.find(e=>e===t);if(n)return f(new Error("CYCLYCAL DEPENDENCY: "+e+"<--\x3e"+n));d.dependents.push(t)}d.listeners.push(e=>n(e))}else{const n=i.actualUrl(e,u);Object.assign(d,{isKnown:!0,dependents:t?[t]:[],listeners:[],moduleRequestUrl:e,actualModuleUrl:n});try{const t=await i.download(n),u=t.data,a=new Function("define","module","exports","require",u);p.amd={};var l=!1;function p(...t){l=!0;const n=t.pop();if("function"!=typeof n)throw new Error(`expecting 'define' to be a function - was ${typeof n}`);const o=(t.pop()||[]).map(t=>c(t,e));Promise.all(o).then(e=>{try{f(n(...e.map(e=>e.module)),"AMD")}catch(e){f(e)}})}try{let t,n;a(p,t,n,()=>{throw new Error("require is invalid in AMD modules: "+e)})}catch(e){l&&f(e)}if(!l)if(s(u)){const n=r(u),s=new o("module","exports","require",n),i={exports:{}};try{await s(i,i.exports,async function(n){const o=new URL(n,t.responseURL).href;return(await c(o,e)).module}),f(i.exports,"CommonJS")}catch(e){f(e)}}else f(new Error("module seems to be neither AMD/UMD not CommonJS"))}catch(e){f(e)}}})}}])});