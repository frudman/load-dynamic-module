!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("axios"));else if("function"==typeof define&&define.amd)define(["axios"],t);else{var o="object"==typeof exports?t(require("axios")):t(e.axios);for(var n in o)("object"==typeof exports?exports:e)[n]=o[n]}}(window,function(e){return function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=1)}([function(t,o){t.exports=e},function(e,t,o){"use strict";o.r(t),o.d(t,"loadedModules",function(){return c}),o.d(t,"default",function(){return a});var n=o(0);const r=new Function("return Object.getPrototypeOf(async function(){}).constructor")(),i=e=>e.replace(/\brequire\s*[(]/g,"await require("),u=e=>/module[.]exports/.test(e);function s(e){return/^(https?[:])?[\/][\/]/i.test(e)?e:/^[a-z_$]/i.test(e)?`https://unpkg.com/${e}`:e}const l={logInfo:console.log.bind(console),logError:console.error.bind(console),actualUrl:s};a.settings=(e=>(Object.assign(l,e),a));const c={};async function a(e,t){return new Promise(async o=>{const f=c[e]||(c[e]={isKnown:!1,module:void 0}),d=l.logInfo,p=l.logError;function m(t,n,r){r?p(e.toUpperCase()+" module: FAILED TO LOAD",n,r):d(e.toUpperCase()+" module: LOADED",n,t),f.module=t,f["is"+n]=!0,f.listeners.forEach(e=>e(t)),o(f)}if(f.isKnown)if(void 0!==f.module)o(f);else{if(t){const o=f.dependents.find(e=>e===t);if(o)return m(null,"CYCLICAL-DEPENDENCY",new Error("CYCLYCAL DEPENDENCY for "+e+" with "+o));f.dependents.push(t)}listeners.push(e=>o(e))}else{const o=l.actualUrl(e,s);Object.assign(f,{isKnown:!0,dependents:t?[t]:[],listeners:[],moduleRequestUrl:e,actualModuleUrl:o});try{const t=await n.get(o);d(`DOWNLOADED MODULE=${e}${e===o?"":` [from ${o}]`}`,t);const s=t.data,l=new Function("define","module","exports","require",s);b.amd={};var y=!1;function b(...t){y=!0,d("..."+e+" is an AMD module");const o=t.pop();if("function"!=typeof o)throw new Error(`expecting 'define' to be a function - was ${typeof o}`);const n=(t.pop()||[]).map(t=>a(t,e));Promise.all(n).then(e=>{try{m(o(...e.map(e=>e.module)),"AMD")}catch(e){m(null,"AMD-INIT-ERROR",e)}})}try{let t,o;l(b,t,o,()=>{throw new Error("require is invalid in AMD modules: "+e)}),d("..."+e+" successfully completed initialization",y?"is an AMD module":"is NOT and amd module")}catch(t){p("..."+e+" failed to initialize as amd module",y,t)}if(!y)if(u(s)){const o=i(s),n=new r("module","exports","require",o),u={exports:{}};try{await n(u,u.exports,async function(o){const n=new URL(o,t.request.responseURL).href;return d("CJS REQUIRE: importing "+n),(await a(n,e)).module}),m(u.exports,"CommonJS")}catch(e){m(null,"CommonJS-INIT-ERROR",e)}}else m(null,"MODULE-TYPE-UNKNOWN",new Error("module seems to be neither AMD/UMD not CommonJS"))}catch(e){m(null,"AXIOS-DOWNLOAD-ERR",e)}}})}}])});